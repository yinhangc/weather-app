{"version":3,"sources":["components/SearchBar.js","components/Loading.js","components/CurrentWeather.js","components/ForecastWeather.js","api/weather.js","hook/useWeather.js","hook/useLocation.js","components/App.js","index.js"],"names":["SearchBar","search","invalidInput","setInvalidInput","useState","searchTerm","setSearchTerm","Form","onSubmit","e","preventDefault","InputGroup","className","FormControl","placeholder","value","onChange","target","Append","Button","variant","Loading","message","Spinner","animation","style","fontWeight","letterSpacing","CurrentWeather","data","location","userReject","cityId","history","useHistory","color","name","sys","country","main","temp","src","window","protocol","weather","icon","alt","description","Table","onClick","push","temp_min","temp_max","feels_like","humidity","pressure","ForecastWeather","searchForecast","invalidForecast","params","useParams","useEffect","id","dayArr","list","date","renderDivs","i","divJSX","hour","index","iconUrl","divsArr","j","Date","dt","getDate","toString","getHours","slice","city","Accordion","defaultActiveKey","reduce","acc","elem","dateDetails","getMonth","getDay","tmpDate","month","day","Card","Toggle","as","Header","eventKey","Collapse","Body","cardJSX","axios","create","baseURL","appid","process","units","useWeather","weatherData","setWeatherData","forecastData","setForecastData","setCityId","setInvalidForecast","query","setQuery","a","lat","lon","get","res","console","log","searchByCoords","q","useCallback","useLocation","setUserReject","setLocation","getCoords","coords","latitude","longitude","code","getLocation","Promise","rej","navigator","geolocation","getCurrentPosition","App","searchByCityName","Container","path","exact","render","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.5cd10482.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport \"./App.scss\";\n\nconst SearchBar = ({ search, invalidInput, setInvalidInput }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    search(searchTerm);\n    setSearchTerm(\"\");\n  };\n\n  const onInputChange = (e) => {\n    setSearchTerm(e.target.value);\n    setInvalidInput(false);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <InputGroup className={invalidInput ? \"mb-1\" : \"mb-4\"}>\n          <FormControl\n            placeholder=\"Search for a city...\"\n            value={searchTerm}\n            onChange={onInputChange}\n          />\n          <InputGroup.Append>\n            <Button variant=\"success pb-1\">\n              <i className=\"fas fa-search\"></i>\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form>\n      {invalidInput ? (\n        <p className=\"text-danger ml-1\">Invalid input! Please try again.</p>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import Spinner from 'react-bootstrap/Spinner'\nimport \"./App.scss\";\nimport React from \"react\";\n\nconst Loading = ({ message }) => {\n  return (\n    <div className=\"d-flex align-items-center justify-content-center p-4 bg-grey rounded\">\n      <Spinner animation=\"border\" variant=\"dark\" />\n      <h4 style={{ fontWeight: '400', letterSpacing: '0.4px' }} className=\"mb-n1 ml-2\">{message}</h4>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport Loading from \"./Loading\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.scss\";\n\nconst CurrentWeather = ({ data, location, userReject, cityId }) => {\n  const history = useHistory();\n\n  if (!location && !userReject && !data) {\n    return <Loading message={\"Loading your location...\"} />;\n  }\n\n  if (!data && !userReject) {\n    return <Loading message={\"Loading weather data...\"} />;\n  }\n\n  if (!data && userReject) {\n    return (\n      <div className=\"d-flex flex-column align-items-center p-4 bg-grey rounded\">\n        <h4 className=\"mb-0\" style={{ color: \"#595260\" }}>\n          <i className=\"fas fa-search mr-2\"></i>Search for a city for weather\n          data!\n        </h4>\n      </div>\n    );\n  }\n\n  const onClick = () => {\n    history.push(`/forecast/${cityId}`);\n  };\n\n  const weatherImgUrl = () => {\n    if (window.location.protocol === 'http:') {\n      return `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\n    } else {\n      return `https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n    }\n  };\n\n  return (\n    <div className=\"d-flex flex-column align-items-center p-4 bg-grey rounded\">\n      <h2>\n        {data.name}, {data.sys.country}\n      </h2>\n      <h3 className=\"mb-0\">{data.main.temp}°C</h3>\n      <img\n        src={weatherImgUrl()}\n        alt=\"Weather condition\"\n      />\n      <h4 className=\"mb-4 text-capitalize\">{data.weather[0].description}</h4>\n\n      <Table>\n        <thead>\n          <tr>\n            <th>\n              <h5 className=\"mb-0\">Weather Details 📜</h5>\n            </th>\n            <th>\n              <Button variant=\"primary\" onClick={onClick}>\n                Weather Forecast\n              </Button>\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td>Temperature Range🌡</td>\n            <td>\n              {data.main.temp_min}°C - {data.main.temp_max}°C\n            </td>\n          </tr>\n          <tr>\n            <td>Temperature Feels Like🌡</td>\n            <td>{data.main.feels_like}°C</td>\n          </tr>\n          <tr>\n            <td>Humidity💧</td>\n            <td>{data.main.humidity}%</td>\n          </tr>\n          <tr>\n            <td>Pressure ☁️</td>\n            <td>{data.main.pressure}hPa</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default CurrentWeather;\n","import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./App.scss\";\nimport Loading from \"./Loading\";\n\nconst ForecastWeather = ({ data, searchForecast, invalidForecast }) => {\n  const history = useHistory();\n  const params = useParams();\n\n  useEffect(() => {\n    searchForecast(params.id);\n  }, [params.id, searchForecast]);\n\n  const onClick = () => {\n    history.push(\"/\");\n  };\n\n  if (invalidForecast) {\n    return (\n      <div className=\"d-flex flex-column\">\n        <h4>Sorry, no forecast data available.</h4>\n        <Button variant=\"primary my-3 px-4 align-self-start\" onClick={onClick}>\n          <i className=\"fas fa-chevron-left mr-1\"></i> Back to Main Page\n        </Button>\n      </div>\n    );\n  }\n\n  if (!data)\n    return (\n      <div className=\"d-flex flex-column\">\n        <Loading message={\"Loading the forecast...\"} />\n        <Button variant=\"primary my-4 px-4 align-self-center\" onClick={onClick}>\n          <i className=\"fas fa-chevron-left mr-1\"></i> Back to Main Page\n        </Button>\n      </div>\n    );\n\n  const dayArr = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const { list } = data;\n  let date = \"\";\n\n  const weatherImgUrl = (iconUrl) => {\n    if (window.location.protocol === 'http:') {\n      return `http://openweathermap.org/img/wn/${iconUrl}@2x.png`;\n    } else {\n      return `https://openweathermap.org/img/wn/${iconUrl}@2x.png`\n    }\n  };\n\n  const renderDivs = (i) => {\n    const divJSX = (hour, index) => {\n      return (\n        <div\n          key={index}\n          className=\"d-flex flex-row flex-lg-column align-items-center justify-content-center\"\n        >\n          <h5 className=\"mb-0\">{hour}:00</h5>\n          <img\n            src={weatherImgUrl(list[index].weather[0].icon)}\n            alt=\"Weather condition\"\n            className=\"ml-auto ml-lg-0\"\n          />\n          <span className=\"mr-auto ml-n2 mr-lg-0 ml-lg-0 text-capitalize\">\n            {list[index].weather[0].description}\n          </span>\n          <h5>{list[index].main.temp}°C</h5>\n        </div>\n      );\n    };\n\n    const divsArr = [];\n    for (let j = i; j < i + 8; j++) {\n      if (j > 39) break;\n      const tmpDate = new Date(list[j].dt * 1000).getDate().toString();\n      if (tmpDate !== date) return divsArr;\n      const hour = (\"0\" + new Date(list[j].dt * 1000).getHours()).slice(-2);\n      divsArr.push(divJSX(hour, j));\n    }\n    return divsArr;\n  };\n\n  const renderCard = () => {\n    const cardJSX = (month, day, i) => {\n      return (\n        <Card key={`0${i.toString()}`}>\n          <Accordion.Toggle as={Card.Header} eventKey={i.toString()}>\n            <strong className=\"mr-1\">\n              {date}/{month}\n            </strong>\n            ({day})\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={i.toString()}>\n            <Card.Body className=\"d-flex justify-content-around flex-column flex-lg-row\">\n              {renderDivs(i)}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      );\n    };\n\n    return list.reduce((acc, elem, i) => {\n      const dateDetails = new Date(elem.dt * 1000);\n      const [tmpDate, month, day] = [\n        dateDetails.getDate().toString(),\n        (dateDetails.getMonth() + 1).toString(),\n        dayArr[dateDetails.getDay()],\n      ];\n      if (i === 0 || tmpDate !== date) {\n        date = tmpDate;\n        acc.push(cardJSX(month, day, i));\n        return acc;\n      }\n      return acc;\n    }, []);\n  };\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <h3 className=\"my-3 forecastTitle\">\n        Weather forecast for{\" \"}\n        <span>\n          {data.city.name}, {data.city.country}\n        </span>{\" \"}\n        :\n      </h3>\n      <Accordion defaultActiveKey=\"0\">{renderCard()}</Accordion>\n      <Button variant=\"primary my-4 px-4 align-self-center\" onClick={onClick}>\n        <i className=\"fas fa-chevron-left mr-1\"></i> Back to Main Page\n      </Button>\n    </div>\n  );\n};\n\nexport default ForecastWeather;\n","import axios from \"axios\";\n\n// Create new instance of axios with custom config\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5\",\n  params: {\n    appid: process.env.REACT_APP_WEATHER_API_KEY,\n    units: 'metric',\n  },\n});\n","import { useState, useEffect, useCallback } from \"react\";\nimport weather from \"../api/weather\";\n\nconst useWeather = (location) => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [cityId, setCityId] = useState(\"\");\n  const [invalidInput, setInvalidInput] = useState(false);\n  const [invalidForecast, setInvalidForecast] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  // Run only after getting user location\n  useEffect(() => {\n    const searchByCoords = async ([lat, lon]) => {\n      try {\n        const res = await weather.get(\"/weather\", {\n          params: {\n            lat,\n            lon,\n          },\n        });\n        setCityId(res.data.id);\n        setWeatherData(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (location) {\n      searchByCoords(location);\n    }\n  }, [location]);\n\n  const searchByCityName = async (searchTerm) => {\n    try {\n      if (!searchTerm) return;\n      const res = await weather.get(\"/weather\", {\n        params: {\n          q: searchTerm,\n        },\n      });\n      setWeatherData(res.data);\n      setCityId(res.data.id);\n    } catch (err) {\n      setInvalidInput(true);\n    }\n  };\n\n  const searchForecast = useCallback(\n    async (searchTerm) => {\n      setQuery(searchTerm);\n      try {\n        if (!query) return;\n        const res = await weather.get(\"/forecast\", {\n          params: {\n            id: query,\n          },\n        });\n        setInvalidForecast(false);\n        setForecastData(res.data);\n      } catch (err) {\n        setInvalidForecast(true);\n      }\n    },\n    [query]\n  );\n\n  return [\n    weatherData,\n    forecastData,\n    cityId,\n    searchByCityName,\n    searchForecast,\n    invalidInput,\n    setInvalidInput,\n    invalidForecast,\n  ];\n};\n\nexport default useWeather;\n","import { useState, useEffect } from \"react\";\n\nconst useLocation = () => {\n  const [userReject, setUserReject] = useState(false);\n  const [location, setLocation] = useState(null);\n\n  // Run at initial render only\n  useEffect(() => {\n    const getLocation = async () => {\n      try {\n        const data = await getCoords();\n        const { latitude: lat, longitude: lon } = data.coords;\n        setLocation([lat, lon]);\n        // setLocationLoading(false);\n      } catch (err) {\n        if (err.code === 1) {\n          setUserReject(true);\n        }\n      }\n    };\n    getLocation();\n  }, []);\n\n  const getCoords = () => {\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(res, rej);\n    });\n  };\n\n  return [userReject, location];\n};\n\nexport default useLocation;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './App.scss';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport CurrentWeather from './CurrentWeather';\nimport ForecastWeather from './ForecastWeather';\nimport useWeather from '../hook/useWeather';\nimport useLocation from '../hook/useLocation';\n\nconst App = () => {\n  const [userReject, location] = useLocation();\n  const [\n    weatherData,\n    forecastData,\n    cityId,\n    searchByCityName,\n    searchForecast,\n    invalidInput,\n    setInvalidInput,\n    invalidForecast,\n  ] = useWeather(location);\n\n  return (\n    <Container>\n      <h1 className=\"pt-5 pb-3 mb-0 text-center\">Weather App ⛅️</h1>\n      <Router>\n        <Route\n          path={['/', '/weather-app']}\n          exact\n          render={() => (\n            <>\n              <SearchBar\n                search={searchByCityName}\n                invalidInput={invalidInput}\n                setInvalidInput={setInvalidInput}\n              />\n              <CurrentWeather\n                data={weatherData}\n                location={location}\n                userReject={userReject}\n                cityId={cityId}\n              />\n            </>\n          )}\n        />\n        <Route\n          path=\"/forecast/:id\"\n          exact\n          render={() => (\n            <>\n              <ForecastWeather\n                data={forecastData}\n                searchForecast={searchForecast}\n                invalidForecast={invalidForecast}\n              />\n            </>\n          )}\n        />\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}